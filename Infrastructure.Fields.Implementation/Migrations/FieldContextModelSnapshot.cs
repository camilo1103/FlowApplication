// <auto-generated />
using System;
using Infrastructure.Fields.Implementation.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Fields.Implementation.Migrations
{
    [DbContext(typeof(FieldContext))]
    partial class FieldContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Field.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("TypeFieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasFilter("[Key] IS NOT NULL");

                    b.HasIndex("TypeFieldId");

                    b.ToTable("Field");
                });

            modelBuilder.Entity("Domain.Field.TypeField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("TypeField");
                });

            modelBuilder.Entity("Domain.Field.Validation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TypeFieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ValidationEnum")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeFieldId");

                    b.ToTable("Validation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1bb3afd5-701f-4fa7-a261-e4bf2c33c876"),
                            CreateDate = new DateTime(2021, 11, 2, 2, 14, 54, 799, DateTimeKind.Local).AddTicks(8796),
                            Description = "prueba",
                            IsDelete = false,
                            ValidationEnum = 0,
                            Value = "OK"
                        });
                });

            modelBuilder.Entity("Domain.Field.Field", b =>
                {
                    b.HasOne("Domain.Field.TypeField", "TypeField")
                        .WithMany()
                        .HasForeignKey("TypeFieldId");

                    b.Navigation("TypeField");
                });

            modelBuilder.Entity("Domain.Field.Validation", b =>
                {
                    b.HasOne("Domain.Field.TypeField", null)
                        .WithMany("Validations")
                        .HasForeignKey("TypeFieldId");
                });

            modelBuilder.Entity("Domain.Field.TypeField", b =>
                {
                    b.Navigation("Validations");
                });
#pragma warning restore 612, 618
        }
    }
}
